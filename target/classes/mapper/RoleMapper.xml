<?xml version="1.0" encoding="UTF-8" ?>
        <!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
                "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tm.mapper.RoleMapper">

    <resultMap id="queryRoleAndPermissionResult" type="RoleEntity">
        <id property="id" column="roleId"/>
        <result property="name" column="roleName"/>
        <result property="status" column="status"/>
        <result property="remark" column="remark"/>
        <result property="createDate" column="create_date"/>
        <result property="updateDate" column="update_date"/>
        <!-- 一对多 -->
        <collection property="perList" ofType="PermissionEntity" >
            <id property="id" column="perId"/>
            <result property="name" column="perName"/>
            <result property="type" column="type"/>
            <result property="pid" column="pid"/>
            <result property="permissionIdentifier" column="permission_identifier"/>
            <result property="url" column="url"/>
        </collection>
        <!-- 多对一 -->
        <!--<association property="" ></association>-->
    </resultMap>

    <select id="rolelistAll" resultMap="queryRoleAndPermissionResult">
        <include refid="queryRoleAndPermission"/>
        <where>
            <if test="roleEntity.name != null and roleEntity.name != ''">
                and r.name like concat('%',#{roleEntity.name},'%')
            </if>
            <if test="roleEntity.status != null">
                and r.status = #{roleEntity.status}
            </if>
        </where>
    </select>

    <sql id="queryRoleAndPermission">
        select r.*,
               p.*,
               r.name as roleName,
               p.name as perName,
               r.id as roleId,
               p.id as perId
        from a_role r LEFT JOIN a_role_permission rp on r.id = rp.role_id LEFT JOIN a_permission p on rp.permission_id = p.id
    </sql>

    <select id="getByRoleName" resultType="RoleEntity">
        select * from a_role where name = #{name}
    </select>

    <select id="getRolebyUserId" resultType="RoleEntity">
        select DISTINCT r.* from a_user_role ur left join a_role r on ur.role_id = r.id where ur.user_id = #{id}
    </select>

    <!-- 新增角色 -->
    <insert id="roleadd">
        insert into a_role(
            name,
            status,
            remark,
            create_date
        )values (
            #{name},
            #{status},
            #{remark},
            now()
                        )
        <selectKey keyProperty="id" order="AFTER" resultType="int">
            select LAST_INSERT_ID()
        </selectKey>

    </insert>

    <!-- 新增中间表 -->
    <insert id="addrole">
        insert into a_role_permission (
            role_id,
            permission_id
        )values
        <foreach collection="idArr" item="idArr" separator=",">
            (
             #{rolId},
             #{idArr}
             )
        </foreach>

    </insert>

    <update id="updateRole">
        update a_role set
            name = #{name},
            status = #{status},
            remark = #{remark},
            update_date = now()
        where id = #{id}
    </update>

    <!-- 根据id删除角色 -->
    <delete id="deleteRole">
        delete from a_role where id = #{id}
    </delete>

    <!-- 删除角色和权限中间表 -->
    <delete id="deleteRolePer">
        delete from a_role_permission where role_id = #{id} ;
    </delete>

    <!-- 批量删除 -->
    <delete id="deleteAll">
        delete from a_role where id in
        <foreach collection="ids" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>
    </delete>

</mapper>
