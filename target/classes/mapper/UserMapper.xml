<?xml version="1.0" encoding="UTF-8" ?>
        <!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
                "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tm.mapper.UserMapper">

    <sql id="aaa">
        <where>
            <if test="user.username !=null and user.username !='' ">
                and username like concat('%',#{user.username},'%')
            </if>
            <if test="user.username !=null and user.username !='' ">
                or real_name like concat('%',#{user.username},'%')
            </if>
            <if test="user.positionId != null and user.positionId !='' ">
                and position_id = #{user.positionId}
            </if>
            <if test="user.deptId != null and user.deptId !='' ">
                and dept_id = #{user.deptId}
            </if>
        </where>
    </sql>

    <select id="userlistAll" resultType="UserEntity">
        select * from a_user
        <include refid="aaa"></include>
        limit #{startIndex},#{pageSize}
    </select>

    <!--  查询总条数  -->
    <select id="userlistAllCount" resultType="Integer">
        select count(1) from a_user
        <include refid="aaa"></include>
    </select>

    <select id="getUserByName" resultType="UserEntity">
        select * from a_user where username = #{username}
    </select>

    <!--  登录查询  -->
    <select id="getUserByNamequery" resultType="UserEntity">
        select * from a_user where username = #{principal}
    </select>

    <select id="getPermissionByName" resultType="String">
        select DISTINCT p.permission_identifier from a_user u
        left join a_user_role ur on u.id = ur.user_id
          left join a_role_permission rp on ur.role_id = rp.role_id
          left join a_permission p on p.id = rp.permission_id

        where u.username = #{principal}
          and type = 1
    </select>

    <insert id="userinsert">
        insert into a_user(
            job_number,
            username,
            real_name,
            email,
            create_time,
            enter_date,
            status,
            password,
            position_id,
            dept_id,
            phone_number,
            sex,
            sort_number,
            birthday
        )values (
            #{jobNumber},
            #{username},
            #{realName},
            #{email},
            now(),
            now(),
            #{status},
            #{password},
            #{positionId},
            #{deptId},
            #{phoneNumber},
            #{sex},
            #{sortNumber},
            now()
                        )
        <selectKey keyProperty="id" order="AFTER" resultType="int">
            select LAST_INSERT_ID()
        </selectKey>

    </insert>

    <!-- 新增用户和角色中间表 -->
    <!-- 循环里面加分号就会停止循环 -->
    <insert id="userRoleinsert">
        insert into a_user_role (
            user_id,
            role_id
        )
        values
           <foreach collection="arrIds" item="arrIds" separator=",">
               (#{id},#{arrIds})
           </foreach>
    </insert>

    <update id="userupdate">
        update a_user set
              job_number = #{jobNumber},
              username = #{username},
              real_name = #{realName},
              email = #{email},
              enter_date = #{enterDate},
              status = #{status},
              password = #{password},
              position_id = #{positionId},
              dept_id = #{deptId},
              phone_number = #{phoneNumber},
              sex = #{sex},
              sort_number = #{sortNumber},
              birthday = now()
        where id = #{id}
    </update>

    <update id="userupdates">
        update a_user set
              job_number = #{jobNumber},
              username = #{username},
              real_name = #{realName},
              email = #{email},
              enter_date = #{enterDate},
              status = #{status},
              password = #{password},
              position_id = #{positionId},
              dept_id = #{deptId},
              phone_number = #{phoneNumber},
              sex = #{sex},
              sort_number = #{sortNumber},
              birthday = now()
        where id = #{id}
    </update>

    <delete id="deleteuser">
        delete from a_user where id = #{id}
    </delete>

    <!--  删除用户角色中间表  -->
    <delete id="deleteUserRole">
        delete from a_user_role where user_id = #{id}
    </delete>

</mapper>
